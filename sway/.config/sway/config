input * xkb_layout custom
set $mod Mod4
set $super Mod5

# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

font pango: JetBrainsMono Nerd Font 10

gaps inner 8px
default_border pixel 2

client.focused #b7bdf8 #b7bdf8 #b7bdf8 #b7bdf8 #b7bdf8

corner_radius 12

### Variables
#
# Logo key. Use Mod1 for Alt.

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term ghostty
set $browser firefox

# Your preferred application launcher
# set $menu wofi --show drun
set $menu fuzzel

set $swaylock swaylock -f -e -i ~/Pictures/gowall/wallhaven-y8k37d.jpg

### OBS Fixes and XDG Desktop
# Start xdg-desktop-portal services (ensure wlr starts first)
exec --no-startup-id /usr/lib/xdg-desktop-portal-wlr &
exec --no-startup-id /usr/lib/xdg-desktop-portal -r


set $obs_workspace 10
set $obs_headless_workspace 1337
set $headless_output_name "HEADLESS-OBS"

# Auto-assign OBS to workspace 10 and setup headless output
for_window [class="^obs$"] {
    exec ~/.config/sway/scripts/obs_setup.sh
    move container to workspace $obs_workspace
    exec ~/.config/sway/scripts/obs_monitor.sh &
}

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# output * bg ~/bg/wallhaven-5g22q5.png fill
output * bg ~/Pictures/gowall/wallhaven-3lp2md.jpg fill
# output * bg ~/Pictures/bg/romb.png fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output DP-1 mode 2560x1440@165hz position 1920,0
# Disable for now, causing flickering :(
output DP-1 adaptive_sync off

output DP-2 mode 1920x1080@144.007hz position 0,0
# output DP-2 mode 1920x1080@144.007hz position 2560,0
# output HDMI-A-1 mode 1920x1080@60hz position 4480,0

# Two Monitors Only
# output HDMI-A-1 mode 1920x1080@60hz position 2560,0

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 "$swaylock" \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep "$swaylock"
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# input "type:keyboard" xkb_options caps:swapescape
#input "type:keyboard" {
#	xkb_options caps:hyper
#}

input "type:pointer" {
	accel_profile flat
}

### Key bindings
#
# Basics:
#
    # Lock screen
    bindsym $super+l exec $swaylock

    # Start a terminal
    bindsym $mod+t exec $term

    # Start a browser
    bindsym $mod+b exec $browser

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $super+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    # Before OBS setup: bindsym $mod+1 workspace number 
    bindsym $mod+1 exec ~/.config/sway/scripts/workspace_switch.sh 1
    bindsym $mod+2 exec ~/.config/sway/scripts/workspace_switch.sh 2
    bindsym $mod+3 exec ~/.config/sway/scripts/workspace_switch.sh 3
    bindsym $mod+4 exec ~/.config/sway/scripts/workspace_switch.sh 4
    bindsym $mod+5 exec ~/.config/sway/scripts/workspace_switch.sh 5
    bindsym $mod+6 exec ~/.config/sway/scripts/workspace_switch.sh 6
    bindsym $mod+7 exec ~/.config/sway/scripts/workspace_switch.sh 7
    bindsym $mod+8 exec ~/.config/sway/scripts/workspace_switch.sh 8
    bindsym $mod+9 exec ~/.config/sway/scripts/workspace_switch.sh 9
    bindsym $mod+0 exec ~/.config/sway/scripts/workspace_switch.sh 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    workspace 1 output DP-1
    workspace 2 output DP-1
    workspace 3 output DP-1
    workspace 4 output DP-1
    workspace 5 output DP-1
    workspace 6 output DP-1
    workspace 7 output DP-1
    workspace 8 output DP-1
    workspace 9 output DP-1
    # workspace 10 output DP-1
    workspace 10 output DP-2

    # When using other displays
    # workspace 2 output DP-2
    # workspace 10 output HDMI-A-1

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+Semicolon splith
    bindsym $mod+Apostrophe splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Return fullscreen

    # Fake fullscreen so I can game peacefully
    bindsym $mod+Shift+Return gaps inner all toggle 8px
    bindsym $mod+Shift+b border toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

    # Send all floating windows to the scratchpad
    bindsym $mod+shift+f [floating workspace=__focused__] move scratchpad
    bindsym $mod+f [floating] scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto for arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
    bindsym $mod+r mode "resize"

#
# Opacity Mode:
#
mode "opacity" {
    # left will slightly lower opacity, right will slightly raise opacity
    # down will lower opacity, right will raise opacity
    bindsym $left opacity minus .01
    bindsym $right opacity plus .01
    bindsym $up opacity plus .1
    bindsym $down opacity minus .1

    # Ditto for arrow keys
    bindsym Left opacity minus .01
    bindsym Right opacity plus .01
    bindsym Up opacity plus .1
    bindsym Down opacity minus .1

    # F key will reset all windows' opacities
    bindsym f [workspace=__focused__] opacity 1

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
    bindsym $mod+o mode "opacity"

    #
    # Utilities:
    #
    # Special key to take a screenshot with grim
    # Screenshot everything
    bindsym Print exec grim - | wl-copy && TMP_FILE=$(mktemp) && wl-paste > "$TMP_FILE" && dunstify "Screenshot taken" "It's in your clipboard, dummy." -t 3000 -I "$TMP_FILE" && cp "$TMP_FILE" ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png

    # Screenshot current window
    bindsym Ctrl+Shift+2 exec grim -g "$(get_focused_window)" - | wl-copy && TMP_FILE=$(mktemp) && wl-paste > "$TMP_FILE" && dunstify "Screenshot taken" "It's in your clipboard, dummy." -t 3000 -I "$TMP_FILE" && cp "$TMP_FILE" ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png 

    # Screenshot current monitor
    bindsym Ctrl+Shift+3 exec grim -o "$(get_focused_monitor)" - | wl-copy && TMP_FILE=$(mktemp) && wl-paste > "$TMP_FILE" && dunstify "Screenshot taken" "It's in your clipboard, dummy." -t 3000 -I "$TMP_FILE" && cp "$TMP_FILE" ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png 

    # Screenshot region
    bindsym Ctrl+Shift+4 exec grim -g "$(slurp)" - | wl-copy && TMP_FILE=$(mktemp) && wl-paste > "$TMP_FILE" && dunstify "Screenshot taken" "It's in your clipboard, dummy." -t 3000 -I "$TMP_FILE" && cp "$TMP_FILE" ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png 
    # Colorpicker
    bindsym Ctrl+Shift+m exec grim -g "$(slurp -p)" -t ppm - | magick - -format '#%[hex:p{0,0}]' info:- | wl-copy && dunstify "Picked color $(wl-paste)" -t 3000
    
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special keys to control media playback
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioPrev exec playerctl previous
    bindsym --locked XF86AudioNext exec playerctl next

for_window [app_id=^org.pulseaudio.pavucontrol$] {
    floating enable
    resize set 720 500
    move position cursor
    move down 56 px
    move left 64 px
}

# Fake fullscreen for wow gaming
for_window [class=wow.exe] {
    border none
    gaps inner all toggle 8px

}

for_window [app_id="firefox" title="Picture-in-Picture"] floating enable

# WIP
# # This exec_always script watches for focus changes and kills pavucontrol after a 3-second delay
# exec_always {
#     swaymsg -t subscribe -m '["window"]' | jq --unbuffered 'select(.change == "focus").container.app_id' | while read app_id; do
# 	dunstify "test"
#         if [ "$PREV_APP_ID" = '"org.pulseaudio.pavucontrol"' ] && [ "$app_id" != '"org.pulseaudio.pavucontrol"' ]; then
#             # Check if pavucontrol is still running after 3 seconds
#             (
#                 sleep 3
#                 # Only kill if pavucontrol isn't currently focused
#                 CURRENT_FOCUS=$(swaymsg -t get_tree | jq -r '.. | select(.focused? == true).app_id')
#                 if [ "$CURRENT_FOCUS" != "org.pulseaudio.pavucontrol" ] && pgrep -x pavucontrol > /dev/null; then
#                     pkill -x pavucontrol
#                 fi
#             ) &
#         fi
#         PREV_APP_ID="$app_id"
#     done
# }

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar
	# hidden_state show
	# mode hide
	modifier $super
}

bindsym $super+b bar mode dock

include /etc/sway/config.d/*
